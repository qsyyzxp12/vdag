# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-12 12:51
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BoxScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isTeamBoxScore', models.BooleanField(default=False)),
                ('quarter', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('time', models.PositiveSmallIntegerField(default=0)),
                ('two_pts_made', models.PositiveSmallIntegerField(default=0)),
                ('two_pts_attempt', models.PositiveSmallIntegerField(default=0)),
                ('three_pts_made', models.PositiveSmallIntegerField(default=0)),
                ('three_pts_attempt', models.PositiveSmallIntegerField(default=0)),
                ('ft_made', models.PositiveSmallIntegerField(default=0)),
                ('ft_attempt', models.PositiveSmallIntegerField(default=0)),
                ('off_reb', models.PositiveSmallIntegerField(default=0)),
                ('def_reb', models.PositiveSmallIntegerField(default=0)),
                ('total_reb', models.PositiveSmallIntegerField(default=0)),
                ('assist', models.PositiveSmallIntegerField(default=0)),
                ('steal', models.PositiveSmallIntegerField(default=0)),
                ('block', models.PositiveSmallIntegerField(default=0)),
                ('turnover', models.PositiveSmallIntegerField(default=0)),
                ('foul', models.PositiveSmallIntegerField(default=0)),
                ('pts', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Defense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isTeamDefense', models.BooleanField(default=False)),
                ('quarter', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('tip', models.PositiveSmallIntegerField(default=0)),
                ('close_out', models.PositiveSmallIntegerField(default=0)),
                ('stop_ball', models.PositiveSmallIntegerField(default=0)),
                ('block', models.PositiveSmallIntegerField(default=0)),
                ('steal', models.PositiveSmallIntegerField(default=0)),
                ('eight_24', models.PositiveSmallIntegerField(default=0)),
                ('double_team', models.PositiveSmallIntegerField(default=0)),
                ('loose_ball', models.PositiveSmallIntegerField(default=0)),
                ('off_reb', models.PositiveSmallIntegerField(default=0)),
                ('def_reb', models.PositiveSmallIntegerField(default=0)),
                ('off_reb_tip', models.PositiveSmallIntegerField(default=0)),
                ('assist', models.PositiveSmallIntegerField(default=0)),
                ('turnover', models.PositiveSmallIntegerField(default=0)),
                ('wide_open', models.PositiveSmallIntegerField(default=0)),
                ('no_blow_out', models.PositiveSmallIntegerField(default=0)),
                ('def_assist', models.PositiveSmallIntegerField(default=0)),
                ('blown_by', models.PositiveSmallIntegerField(default=0)),
                ('total', models.PositiveSmallIntegerField(default=0)),
                ('deflections', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(max_length=200)),
                ('against', models.CharField(default=b'', max_length=200)),
                ('date', models.DateTimeField(verbose_name=b'date published')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('number', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(default=b'', max_length=200)),
                ('height', models.PositiveSmallIntegerField(default=175)),
                ('weight', models.PositiveSmallIntegerField(default=70)),
                ('used_hand', models.CharField(choices=[(b'L', b'Left hand'), (b'R', b'Right hand')], default=b'R', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='PPP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isTeamPPP', models.BooleanField(default=False)),
                ('offense_way', models.CharField(choices=[(b'F', b'Fast'), (b'I', b'Isolation'), (b'OS', b'Off-ball Screen'), (b'DK', b'Driving Kick'), (b'C', b'Cut'), (b'O', b'Other'), (b'PNR', b'Pick and Roll'), (b'S', b'Second'), (b'PU', b'Post Up'), (b'HU', b'High Post')], default=b'', max_length=3)),
                ('shot_way', models.CharField(choices=[(b'D', b'Drive'), (b'PU', b'Pull Up'), (b'SU', b'Spot Up'), (b'TO', b'Turnover'), (b'PO', b'Possession')], default=b'', max_length=2)),
                ('result', models.CharField(blank=True, choices=[(b'M', b'Made'), (b'A', b'Attempt'), (b'F', b'Foul'), (b'Pts', b'Points')], max_length=3, null=True)),
                ('value', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ShotChart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isTeamShotChart', models.BooleanField(default=False)),
                ('zone1_made', models.PositiveSmallIntegerField(default=0)),
                ('zone1_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone1_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone2_made', models.PositiveSmallIntegerField(default=0)),
                ('zone2_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone2_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone3_made', models.PositiveSmallIntegerField(default=0)),
                ('zone3_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone3_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone4_made', models.PositiveSmallIntegerField(default=0)),
                ('zone4_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone4_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone5_made', models.PositiveSmallIntegerField(default=0)),
                ('zone5_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone5_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone6_made', models.PositiveSmallIntegerField(default=0)),
                ('zone6_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone6_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone7_made', models.PositiveSmallIntegerField(default=0)),
                ('zone7_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone7_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone8_made', models.PositiveSmallIntegerField(default=0)),
                ('zone8_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone8_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone9_made', models.PositiveSmallIntegerField(default=0)),
                ('zone9_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone9_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone10_made', models.PositiveSmallIntegerField(default=0)),
                ('zone10_attempt', models.PositiveSmallIntegerField(default=0)),
                ('zone10_hit_rate', models.PositiveSmallIntegerField(default=0)),
                ('zone11_made', models.PositiveSmallIntegerField(default=0)),
                ('zone11_attempt', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TimeLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('substitute', models.BooleanField(default=False)),
                ('time_min', models.PositiveSmallIntegerField(default=0)),
                ('time_sec', models.PositiveSmallIntegerField(default=0)),
                ('offense_way', models.CharField(blank=True, choices=[(b'F', b'Fast'), (b'I', b'Isolation'), (b'OS', b'Off-ball Screen'), (b'DK', b'Driving Kick'), (b'C', b'Cut'), (b'O', b'Other'), (b'PNR', b'Pick and Roll'), (b'S', b'Second'), (b'PU', b'Post Up'), (b'HU', b'High Post')], max_length=3, null=True)),
                ('shot_way', models.CharField(blank=True, choices=[(b'D', b'Drive'), (b'PU', b'Pull Up'), (b'SU', b'Spot Up'), (b'TO', b'Turnover')], max_length=2, null=True)),
                ('result', models.CharField(blank=True, choices=[(b'M', b'Made'), (b'A', b'Attempt'), (b'F', b'Foul'), (b'N1', b'And One')], max_length=2, null=True)),
                ('bonus_made', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('bonus_attempt', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('points', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Turnover',
            fields=[
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='vdag.Game')),
                ('stolen', models.PositiveSmallIntegerField(default=0)),
                ('badpass', models.PositiveSmallIntegerField(default=0)),
                ('charging', models.PositiveSmallIntegerField(default=0)),
                ('drop', models.PositiveSmallIntegerField(default=0)),
                ('line', models.PositiveSmallIntegerField(default=0)),
                ('three_second', models.PositiveSmallIntegerField(default=0)),
                ('traveling', models.PositiveSmallIntegerField(default=0)),
                ('team', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.AddField(
            model_name='timeline',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vdag.Game'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='player',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player', to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='player1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player1', to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='player2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player2', to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='player3',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player3', to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='player4',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player4', to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='player5',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player5', to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='player_get_off',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_get_off', to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='timeline',
            name='player_get_on',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_get_on', to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='shotchart',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vdag.Game'),
        ),
        migrations.AddField(
            model_name='shotchart',
            name='player',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='ppp',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vdag.Game'),
        ),
        migrations.AddField(
            model_name='ppp',
            name='player',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='defense',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vdag.Game'),
        ),
        migrations.AddField(
            model_name='defense',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vdag.Player'),
        ),
        migrations.AddField(
            model_name='boxscore',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vdag.Game'),
        ),
        migrations.AddField(
            model_name='boxscore',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vdag.Player'),
        ),
        migrations.AlterUniqueTogether(
            name='shotchart',
            unique_together=set([('game', 'isTeamShotChart', 'player')]),
        ),
        migrations.AlterUniqueTogether(
            name='ppp',
            unique_together=set([('game', 'offense_way', 'shot_way', 'result', 'player')]),
        ),
        migrations.AlterUniqueTogether(
            name='defense',
            unique_together=set([('game', 'player', 'quarter')]),
        ),
        migrations.AlterUniqueTogether(
            name='boxscore',
            unique_together=set([('game', 'player', 'quarter')]),
        ),
    ]
